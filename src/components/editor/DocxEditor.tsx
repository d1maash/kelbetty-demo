'use client'

import { useEffect, useRef, useState } from 'react'
import { Download, FileText, Loader2, AlertCircle, RefreshCw } from 'lucide-react'

interface DocxEditorProps {
  file: File
}

type DocxState = 'idle' | 'loading' | 'ready' | 'error'

export default function DocxEditor({ file }: DocxEditorProps) {
  const containerRef = useRef<HTMLDivElement>(null)
  const [state, setState] = useState<DocxState>('idle')
  const [error, setError] = useState<string | null>(null)
  const [htmlContent, setHtmlContent] = useState<string>('')
  const [cancelled, setCancelled] = useState(false)

  useEffect(() => {
    if (!file || !containerRef.current) return

    let isCancelled = false
    setCancelled(false)

    const loadDocx = async () => {
      try {
        setState('loading')
        setError(null)

        // –¢–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        const timeoutId = setTimeout(() => {
          if (!isCancelled) {
            setState('error')
            setError('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏')
          }
        }, 20000) // 20 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç

        // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –¥–µ–º–æ
        await new Promise(resolve => setTimeout(resolve, 1000))

        if (isCancelled) return

        // –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç–∏–ª–µ–π
        const demoContent = `
          <div class="docx-content" style="font-family: 'Times New Roman', serif; line-height: 1.6; color: #333;">
            <h1 style="color: #1e293b; font-size: 28px; font-weight: bold; margin-bottom: 20px; text-align: center; border-bottom: 2px solid #e2e8f0; padding-bottom: 10px;">
              ${file.name.replace(/\.[^/.]+$/, '')}
            </h1>
            
            <div style="margin-bottom: 30px;">
              <h2 style="color: #1e293b; font-size: 22px; font-weight: bold; margin: 24px 0 12px 0;">
                –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
              </h2>
              <p style="color: #475569; line-height: 1.8; margin-bottom: 16px; font-size: 16px;">
                –≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Kelbetty —Å –ø–æ–ª–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç–∏–ª–µ–π –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. 
                –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞—à–µ–≥–æ DOCX —Ñ–∞–π–ª–∞.
              </p>
            </div>

            <div style="margin-bottom: 30px;">
              <h2 style="color: #1e293b; font-size: 22px; font-weight: bold; margin: 24px 0 12px 0;">
                –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
              </h2>
              <ul style="color: #475569; line-height: 1.8; margin-bottom: 16px; padding-left: 24px;">
                <li style="margin-bottom: 8px;">–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π –∏ —à—Ä–∏—Ñ—Ç–æ–≤</li>
                <li style="margin-bottom: 8px;">–ò–ò-—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —á–∞—Ç</li>
                <li style="margin-bottom: 8px;">–≠–∫—Å–ø–æ—Ä—Ç –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ</li>
                <li style="margin-bottom: 8px;">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ª–æ–∂–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>
                <li style="margin-bottom: 8px;">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç–∏–ª–µ–π</li>
              </ul>
            </div>

            <div style="background: #f8fafc; padding: 20px; border-radius: 8px; border-left: 4px solid #3b82f6;">
              <h3 style="color: #1e293b; font-size: 18px; font-weight: bold; margin: 0 0 12px 0;">
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
              </h3>
              <p style="color: #64748b; font-size: 14px; margin: 0;">
                <strong>–ò–º—è:</strong> ${file.name}<br>
                <strong>–†–∞–∑–º–µ—Ä:</strong> ${(file.size / 1024).toFixed(1)} –ö–ë<br>
                <strong>–¢–∏–ø:</strong> ${file.type || 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'}
              </p>
            </div>
          </div>
        `

        if (isCancelled) return

        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        if (containerRef.current) {
          containerRef.current.innerHTML = demoContent
          setHtmlContent(demoContent)
        }

        clearTimeout(timeoutId)
        setState('ready')

      } catch (err) {
        if (!isCancelled) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOCX:', err)
          setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω.')
          setState('error')
        }
      }
    }

    loadDocx()

    return () => {
      isCancelled = true
      setCancelled(true)
    }
  }, [file])

  const handleRetry = () => {
    setState('idle')
    setError(null)
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    if (containerRef.current) {
      containerRef.current.innerHTML = ''
    }
  }

  const handleExport = async () => {
    try {
      if (!htmlContent) {
        alert('–ù–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞')
        return
      }

      // –°–æ–∑–¥–∞–µ–º blob —Å HTML —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
      const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' })
      
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const url = URL.createObjectURL(blob)
      const a = document.createElement('a')
      a.href = url
      a.download = file.name.replace(/\.[^/.]+$/, '') + '_edited.html'
      document.body.appendChild(a)
      a.click()
      document.body.removeChild(a)
      URL.revokeObjectURL(url)
      
      alert('–í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π DOCX —Ñ–∞–π–ª —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π')
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ:', error)
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç')
    }
  }

  const handleContentChange = (e: React.FormEvent<HTMLDivElement>) => {
    const newContent = e.currentTarget.innerHTML
    setHtmlContent(newContent)
  }

  if (state === 'loading') {
    return (
      <div className="h-full flex items-center justify-center bg-white">
        <div className="text-center">
          <Loader2 className="w-8 h-8 animate-spin text-blue-600 mx-auto mb-4" />
          <p className="text-slate-600 mb-2">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç...</p>
          <p className="text-sm text-slate-500">–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Å—Ç–∏–ª–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
        </div>
      </div>
    )
  }

  if (state === 'error') {
    return (
      <div className="h-full flex items-center justify-center bg-white">
        <div className="text-center max-w-md">
          <AlertCircle className="w-16 h-16 text-red-300 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-slate-900 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
          <p className="text-slate-600 mb-4">{error}</p>
          <div className="flex gap-3 justify-center">
            <button 
              onClick={handleRetry}
              className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              <RefreshCw className="w-4 h-4 mr-2" />
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
            <button 
              onClick={() => window.location.reload()}
              className="px-4 py-2 border border-slate-300 text-slate-700 rounded-lg hover:bg-slate-50 transition-colors"
            >
              –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="h-full flex flex-col bg-white">
      {/* Toolbar */}
      <div className="border-b border-slate-200 p-4 bg-slate-50">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <FileText className="w-5 h-5 text-blue-600" />
            <span className="font-medium text-slate-900">{file.name}</span>
            <span className="text-sm text-slate-500">
              ({(file.size / 1024).toFixed(1)} –ö–ë)
            </span>
          </div>
          
          <button
            onClick={handleExport}
            className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            <Download className="w-4 h-4 mr-2" />
            –°–∫–∞—á–∞—Ç—å DOCX
          </button>
        </div>
      </div>

      {/* Document Content */}
      <div className="flex-1 overflow-auto p-8 bg-white">
        <div className="max-w-4xl mx-auto">
          <div
            ref={containerRef}
            className="document-editor min-h-full bg-white shadow-sm border border-slate-200 rounded-lg p-8"
            contentEditable
            suppressContentEditableWarning={true}
            onInput={handleContentChange}
            style={{
              minHeight: '800px',
              lineHeight: '1.6',
              fontSize: '14px',
              fontFamily: 'Times New Roman, serif'
            }}
          />
        </div>
      </div>

      {/* Footer Info */}
      <div className="border-t border-slate-200 p-3 bg-slate-50">
        <p className="text-xs text-slate-500 text-center">
          üí° –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π. –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∏—Å—Ö–æ–¥–Ω—ã–µ —Å—Ç–∏–ª–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
        </p>
      </div>
    </div>
  )
}