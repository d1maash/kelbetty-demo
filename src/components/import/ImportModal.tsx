'use client'

import { useState } from 'react'
import { X, FileText, ArrowLeft } from 'lucide-react'
import ImportDropzone from './ImportDropzone'
import ImportedDocxEditor from '@/components/editor/ImportedDocxEditor'

interface ImportResult {
    success: boolean
    document?: {
        id: string
        title: string
        type: string
        html: string
        createdAt: string
        updatedAt: string
    }
    warnings?: any[]
    error?: string
}

interface ImportModalProps {
    isOpen: boolean
    onClose: () => void
    onImportSuccess?: (result: ImportResult) => void
}

export default function ImportModal({ isOpen, onClose, onImportSuccess }: ImportModalProps) {
    const [importResult, setImportResult] = useState<ImportResult | null>(null)
    const [isEditing, setIsEditing] = useState(false)

    const handleImportSuccess = (result: ImportResult) => {
        setImportResult(result)
        setIsEditing(true)

        // –ü–µ—Ä–µ–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        if (onImportSuccess) {
            onImportSuccess(result)
        }
    }

    const handleSave = async (documentId: string, html: string) => {
        try {
            const response = await fetch(`/api/documents/${documentId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    content: html
                })
            })

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è')
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error)
            throw error
        }
    }

    const handleBackToImport = () => {
        setImportResult(null)
        setIsEditing(false)
    }

    const handleClose = () => {
        setImportResult(null)
        setIsEditing(false)
        onClose()
    }

    if (!isOpen) return null

    return (
        <div className="fixed inset-0 z-50 overflow-y-auto">
            {/* Backdrop */}
            <div className="fixed inset-0 bg-black bg-opacity-50 transition-opacity" onClick={handleClose} />

            {/* Modal */}
            <div className="flex min-h-full items-center justify-center p-4">
                <div className="relative bg-white rounded-xl shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden">
                    {/* Header */}
                    <div className="flex items-center justify-between p-6 border-b border-slate-200">
                        <div className="flex items-center space-x-3">
                            <FileText className="w-6 h-6 text-blue-600" />
                            <h2 className="text-xl font-semibold text-slate-900">
                                –ò–º–ø–æ—Ä—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞
                            </h2>
                        </div>
                        <button
                            onClick={handleClose}
                            className="p-2 text-slate-400 hover:text-slate-600 transition-colors"
                        >
                            <X className="w-5 h-5" />
                        </button>
                    </div>

                    {/* Content */}
                    <div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]">
                        {!isEditing ? (
                            <div className="space-y-6">
                                {/* Info Section */}
                                <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                                    <h3 className="text-lg font-semibold text-blue-900 mb-3">
                                        üéØ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∏–º–ø–æ—Ä—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                                    </h3>
                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <div>
                                            <h4 className="font-medium text-blue-800 mb-2">–ß—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è:</h4>
                                            <ul className="text-sm text-blue-700 space-y-1">
                                                <li>‚Ä¢ –í—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –∏—Ö —Å—Ç–∏–ª–∏</li>
                                                <li>‚Ä¢ –®—Ä–∏—Ñ—Ç—ã, —Ä–∞–∑–º–µ—Ä—ã –∏ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞</li>
                                                <li>‚Ä¢ –ñ–∏—Ä–Ω—ã–π, –∫—É—Ä—Å–∏–≤, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ</li>
                                                <li>‚Ä¢ –¢–∞–±–ª–∏—Ü—ã —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –∏ —Å—Ç–∏–ª—è–º–∏</li>
                                                <li>‚Ä¢ –°–ø–∏—Å–∫–∏ –∏ –æ—Ç—Å—Ç—É–ø—ã</li>
                                                <li>‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
                                            </ul>
                                        </div>
                                        <div>
                                            <h4 className="font-medium text-blue-800 mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h4>
                                            <ul className="text-sm text-blue-700 space-y-1">
                                                <li>‚Ä¢ –ü–æ–ª–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</li>
                                                <li>‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î</li>
                                                <li>‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ HTML —Å —Å—Ç–∏–ª—è–º–∏</li>
                                                <li>‚Ä¢ –ò–ò-—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —á–∞—Ç</li>
                                                <li>‚Ä¢ –í–µ—Ä—Å–∏–æ–Ω–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>

                                {/* Import Component */}
                                <ImportDropzone
                                    onImportSuccess={handleImportSuccess}
                                    onLoaded={(loaded) => {
                                        if (loaded.mode === 'advanced' && loaded.document) {
                                            handleImportSuccess({
                                                success: true,
                                                document: loaded.document,
                                                warnings: loaded.warnings
                                            })
                                        }
                                    }}
                                />

                                {/* Instructions */}
                                <div className="bg-slate-50 border border-slate-200 rounded-lg p-6">
                                    <h4 className="font-semibold text-slate-900 mb-3">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:</h4>
                                    <ol className="text-sm text-slate-700 space-y-2 list-decimal list-inside">
                                        <li>–°–æ–∑–¥–∞–π—Ç–µ DOCX —Ñ–∞–π–ª –≤ Microsoft Word —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ (–∑–∞–≥–æ–ª–æ–≤–∫–∏, —Å–ø–∏—Å–∫–∏, —Ç–∞–±–ª–∏—Ü—ã, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)</li>
                                        <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –≤—ã—à–µ</li>
                                        <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Å—Ç–∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ</li>
                                        <li>–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è</li>
                                        <li>–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ HTML –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</li>
                                    </ol>
                                </div>
                            </div>
                        ) : (
                            <div className="space-y-4">
                                {/* Back Button */}
                                <button
                                    onClick={handleBackToImport}
                                    className="flex items-center px-4 py-2 text-slate-600 hover:text-slate-900 transition-colors"
                                >
                                    <ArrowLeft className="w-4 h-4 mr-2" />
                                    –ù–∞–∑–∞–¥ –∫ –∏–º–ø–æ—Ä—Ç—É
                                </button>

                                {/* Editor */}
                                {importResult?.document && (
                                    <div className="h-[calc(90vh-200px)]">
                                        <ImportedDocxEditor
                                            document={importResult.document}
                                            onSave={handleSave}
                                        />
                                    </div>
                                )}
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    )
}
